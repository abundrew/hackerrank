using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
/// <summary>
/// Almost Integer Rock Garden 
/// https://www.hackerrank.com/contests/w29/challenges/almost-integer-rock-garden
/// </summary>
class Solution61
{
    const long R = 100000000000000L;

    static int xy2ix(int x, int y) { return (x + 12) * 26 + y + 12; }
    static int ix2x(int ix) { return ix / 26 - 12; }
    static int ix2y(int ix) { return ix % 26 - 12; }

    static long[] ixDs = null;
    static int[][] ixSv = null;
    static List<int> ixVs = null;

    static Dictionary<long, List<int>> garden = null;
    static HashSet<int> ixQ = null;

    static long[][] solutions = new long[][]
    {
        new long[] { 3840481040530,4536101718730,16552506059640,40312423743285,36931687685300,44030650891060,81665382639200,89244398944980,4536101718730,48528137423857,64911064067350,64911064067350 },
        new long[] { 97056274847710,29563014098700,63014581273460,8276253029822,40175425099140,45362404707370,72792206135790,43398113205660,66190378969060,66190378969060,84885780179610,83095189484530 },
        new long[] { 97056274847710,29563014098700,63014581273460,8276253029822,40175425099140,84885780179610,43398113205660,83095189484530,45362404707370,66190378969060,66190378969060,72792206135790 },
        new long[] { 27882059609970,27882059609970,48528137423857,23606797749979,80624847486570,84885780179610,48683298050514,21954445729289,4159457879230,21267040355190,4987562112090,5538513813742 },
        new long[] { 27882059609970,27882059609970,48528137423857,23606797749979,4159457879230,21267040355190,80624847486570,84885780179610,4987562112090,48683298050514,21954445729289,5538513813742 },
        new long[] { 62049935181330,40175425099140,77032961426900,83095189484530,4536101718730,5538513813742,94427190999916,16227766016838,42220510185600,89244398944980,44030650891060,41421356237310 },
        new long[] { 62049935181330,40175425099140,77032961426900,83095189484530,89244398944980,44030650891060,94427190999916,41421356237310,42220510185600,4536101718730,5538513813742,16227766016838 },
        new long[] { 41640786499870,60232526704263,24264068711928,16227766016838,40175425099140,19803902718560,9901951359278,60555127546399,81665382639200,81665382639200,81024967590665,82842712474619 },
        new long[] { 41640786499870,60232526704263,24264068711928,16227766016838,40175425099140,19803902718560,81024967590665,41421356237310,42220510185600,81665382639200,9901951359278,41421356237310 },
        new long[] { 55634918610400,29563014098700,63014581273460,8276253029822,40175425099140,14213562373100,84885780179610,83095189484530,45362404707370,66190378969060,66190378969060,43398113205660 },
        new long[] { 55634918610400,29563014098700,63014581273460,8276253029822,40175425099140,66190378969060,84885780179610,83095189484530,14213562373100,45362404707370,66190378969060,43398113205660 },
        new long[] { 86606874731850,14213562373100,63014581273460,23606797749979,18033988749890,19803902718560,84885780179610,84885780179610,41640786499870,19803902718560,4987562112090,38516480713450 },
        new long[] { 86606874731850,14213562373100,63014581273460,23606797749979,18033988749890,19803902718560,84885780179610,38516480713450,41640786499870,19803902718560,4987562112090,84885780179610 },
        new long[] { 60147050873540,80624847486570,66190378969060,54400374531753,42220510185600,41640786499870,18033988749890,18033988749890,60147050873540,8304597359460,44030650891060,6225774829855 },
        new long[] { 60147050873540,80624847486570,66190378969060,54400374531753,42220510185600,41640786499870,41640786499870,44030650891060,60147050873540,8304597359460,94427190999916,6225774829855 },
        new long[] { 52996408614170,62049935181330,5538513813742,32455532033676,40175425099140,63014581273460,60232526704263,60555127546399,70469991071960,20655561573370,21954445729289,9901951359278 },
        new long[] { 52996408614170,62049935181330,5538513813742,32455532033676,70469991071960,20655561573370,21954445729289,60555127546399,40175425099140,63014581273460,60232526704263,9901951359278 },
        new long[] { 31370849898480,19803902718560,19803902718560,60555127546399,8304597359460,80624847486570,29563014098700,16227766016838,19803902718560,24621125123532,6225774829855,83095189484530 },
        new long[] { 31370849898480,19803902718560,19803902718560,60555127546399,80624847486570,6225774829855,83095189484530,16227766016838,8304597359460,19803902718560,29563014098700,24621125123532 },
        new long[] { 89949493661166,89244398944980,40175425099140,70820393249937,89244398944980,8304597359460,47213595499958,60555127546399,89244398944980,4987562112090,48683298050514,61577310586391 },
        new long[] { 89949493661166,89244398944980,40175425099140,70820393249937,89244398944980,61577310586391,47213595499958,60555127546399,89244398944980,8304597359460,4987562112090,48683298050514 },
        new long[] { 28010988928052,84885780179610,5538513813742,9901951359278,45362404707370,45362404707370,84885780179610,60232526704263,36931687685300,43398113205660,8276253029822,47213595499958 },
        new long[] { 28010988928052,84885780179610,5538513813742,9901951359278,36931687685300,45362404707370,43398113205660,60232526704263,45362404707370,84885780179610,8276253029822,47213595499958 },
        new long[] { 7106781186548,60232526704263,16227766016838,23606797749979,18033988749890,9901951359278,9901951359278,9901951359278,42220510185600,40175425099140,81665382639200,81024967590665 },
        new long[] { 7106781186548,60232526704263,16227766016838,23606797749979,42220510185600,40175425099140,19803902718560,94427190999916,81665382639200,81024967590665,9901951359278,23606797749979 },
        new long[] { 21110255092798,60232526704263,16227766016838,23606797749979,18033988749890,19803902718560,81024967590665,21110255092798,40175425099140,81665382639200,7106781186548,9901951359278 },
        new long[] { 21110255092798,60232526704263,16227766016838,23606797749979,19803902718560,81665382639200,7106781186548,81024967590665,40175425099140,18033988749890,21110255092798,9901951359278 },
        new long[] { 65685424949238,60232526704263,16227766016838,23606797749979,40175425099140,18033988749890,19803902718560,41421356237310,42220510185600,81665382639200,81024967590665,9901951359278 },
        new long[] { 65685424949238,60232526704263,16227766016838,23606797749979,40175425099140,81024967590665,9901951359278,41421356237310,42220510185600,18033988749890,19803902718560,81665382639200 },
        new long[] { 12310562561766,64911064067350,64911064067350,70469991071960,4159457879230,24621125123532,7106781186548,16227766016838,80624847486570,84885780179610,84885780179610,84885780179610 },
        new long[] { 12310562561766,64911064067350,64911064067350,70469991071960,4159457879230,80624847486570,84885780179610,24621125123532,84885780179610,84885780179610,7106781186548,16227766016838 },
    };

    static void AddSolution(long[] solution)
    {
        for (int i = 0; i < solution.Length; i++)
        {
            foreach (int v in garden[solution[i]])
            {
                if (!ixQ.Contains(v)) continue;
                HashSet<int> s11 = new HashSet<int>();
                for (int j = 0; j < solution.Length; j++)
                {
                    if (i == j) continue;
                    int[] uu = garden[solution[j]].Where(p => p != v && !s11.Contains(p)).ToArray();
                    if (uu.Length == 0) break;
                    s11.Add(uu[0]);
                }
                if (s11.Count == 11) ixSv[v] = s11.ToArray();
                ixQ.Remove(v);
            }
        }
    }

    static void Main(String[] args)
    {
        //----------------------------------------------------------------------
        StreamReader sr = new StreamReader(Console.OpenStandardInput());
        StreamWriter sw = new StreamWriter(Console.OpenStandardOutput());
        //----------------------------------------------------------------------
        int[] xy = sr.ReadLine().Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries).Select(p => int.Parse(p)).ToArray();

        ixDs = new long[26 * 26 + 1];
        for (int i = 0; i < 26 * 26 + 1; i++) ixDs[i] = -1;
        ixSv = new int[26 * 26 + 1][];
        ixVs = new List<int>();

        garden = new Dictionary<long, List<int>>();
        ixQ = new HashSet<int>();

        for (int x = -12; x <= 12; x++)
            for (int y = -12; y <= 12; y++)
            {
                int z2 = x * x + y * y;
                int z = (int)Math.Sqrt(z2);
                if (z * z == z2) continue;
                decimal ds = (decimal)Math.Sqrt(z2);
                ds = ds - (int)ds;
                ds = ds * R;
                long lds = (long)ds;
                int ix = xy2ix(x, y);

                if (!garden.ContainsKey(lds)) garden[lds] = new List<int>();
                garden[lds].Add(ix);
                ixDs[ix] = lds;
                ixVs.Add(ix);
                ixQ.Add(ix);
            }

        foreach (long[] solution in solutions) AddSolution(solution);

        foreach (int v in ixSv[xy2ix(xy[0], xy[1])])
            sw.WriteLine("{0} {1}", ix2x(v), ix2y(v));
        //----------------------------------------------------------------------
        sr.Dispose();
        sw.Dispose();
        //----------------------------------------------------------------------
    }
}
